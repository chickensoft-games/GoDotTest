<Project Sdk="Godot.NET.Sdk/4.0.0-beta.8">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <LangVersion>10.0</LangVersion>
    <Nullable>enable</Nullable>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <Title>GoDotTest</Title>
    <Description>C# test runner for Godot. Run tests from the command line, collect code coverage, and debug tests in VSCode.
    </Description>
    <Copyright>Â© 2022 Chickensoft Games</Copyright>
    <Company>Chickensoft</Company>

    <PackageId>Chickensoft.GoDotTest</PackageId>
    <PackageVersion>1.1.2-beta8</PackageVersion>
    <PackageReleaseNotes>GoDotTest release.</PackageReleaseNotes>
    <PackageTags>Godot;Test;Testing;Runner;Chickensoft;Gamedev;Utility;Utilities</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageProjectUrl>git@github.com:chickensoft-games/go_dot_test.git</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>

    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/chickensoft-games/go_dot_test</RepositoryUrl>

    <!-- Don't include the test project which tests the test system itself. -->
    <DefaultItemExcludes>$(DefaultItemExcludes);test/**/*</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="\" />
    <ProjectReference Include="../go_dot_log/GoDotLog.csproj" PrivateAssets="All" />
    <ProjectReference Include="../go_dot_collections/GoDotCollections.csproj" PrivateAssets="All" />
    <!-- Required for inheritdoc -->
    <PackageReference Include="SauceControl.InheritDoc" Version="1.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>


  <!-- Locally referenced projects don't automatically get included in nuget -->
  <!-- packages, hence all this stuff. -->
  <!-- https://josef.codes/dotnet-pack-include-referenced-projects/ -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <!-- Filter out unnecessary files -->
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'All'))" />
    </ItemGroup>

    <!-- Print batches for debug purposes -->
    <Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

    <ItemGroup>
      <!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>
  </Target>
</Project>
